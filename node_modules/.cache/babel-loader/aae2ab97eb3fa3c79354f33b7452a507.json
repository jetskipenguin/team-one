{"ast":null,"code":"import max from \"./max.js\";\nimport maxIndex from \"./maxIndex.js\";\nimport min from \"./min.js\";\nimport minIndex from \"./minIndex.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, { numbers } from \"./number.js\";\nimport { ascendingDefined } from \"./sort.js\";\nimport greatest from \"./greatest.js\";\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n    i = (n - 1) * p,\n    i0 = Math.floor(i),\n    value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n    value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\nexport function quantileSorted(values, p) {\n  let valueof = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n    i = (n - 1) * p,\n    i0 = Math.floor(i),\n    value0 = +valueof(values[i0], i0, values),\n    value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\nexport function quantileIndex(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return minIndex(values);\n  if (p >= 1) return maxIndex(values);\n  var n,\n    i = Math.floor((n - 1) * p),\n    order = (i, j) => ascendingDefined(values[i], values[j]),\n    index = quickselect(Uint32Array.from(values, (_, i) => i), i, 0, n - 1, order);\n  return greatest(index.subarray(0, i + 1), i => values[i]);\n}","map":{"version":3,"names":["max","maxIndex","min","minIndex","quickselect","number","numbers","ascendingDefined","greatest","quantile","values","p","valueof","Float64Array","from","n","length","i","i0","Math","floor","value0","subarray","value1","quantileSorted","quantileIndex","order","j","index","Uint32Array","_"],"sources":["C:/Users/ethan/Desktop/projects/team-one/node_modules/d3-array/src/quantile.js"],"sourcesContent":["import max from \"./max.js\";\nimport maxIndex from \"./maxIndex.js\";\nimport min from \"./min.js\";\nimport minIndex from \"./minIndex.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, {numbers} from \"./number.js\";\nimport {ascendingDefined} from \"./sort.js\";\nimport greatest from \"./greatest.js\";\n\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileIndex(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return minIndex(values);\n  if (p >= 1) return maxIndex(values);\n  var n,\n      i = Math.floor((n - 1) * p),\n      order = (i, j) => ascendingDefined(values[i], values[j]),\n      index = quickselect(Uint32Array.from(values, (_, i) => i), i, 0, n - 1, order);\n  return greatest(index.subarray(0, i + 1), i => values[i]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}